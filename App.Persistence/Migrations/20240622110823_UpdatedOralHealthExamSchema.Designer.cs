// <auto-generated />
using System;
using App.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace App.Persistence.Migrations
{
    [DbContext(typeof(OralEhrContext))]
    [Migration("20240622110823_UpdatedOralHealthExamSchema")]
    partial class UpdatedOralHealthExamSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("App.Domain.Models.CreditSchema.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOfExamination")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<TimeSpan>("DurationInterval")
                        .HasColumnType("interval");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone");

                    b.Property<string>("ExamStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExamTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<int>("MaxMark")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Exam", "credit");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeAPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("APIResult")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Mandible")
                        .HasColumnType("integer");

                    b.Property<int>("Maxilla")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PracticeAPI", "credit");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeBewe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BeweResult")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("PracticeBewe", "credit");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeBleeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BleedingResult")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Mandible")
                        .HasColumnType("integer");

                    b.Property<int>("Maxilla")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PracticeBleeding", "credit");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeDMFT_DMFS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("DMFSResult")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DMFTResult")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PracticeDMFT_DMFS", "credit");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticePatient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("EthnicGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtherData")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtherData2")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtherData3")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtherGroup")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("YearsInSchool")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PracticePatient", "credit");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticePatientExaminationCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DoctorComment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PatientExaminationResultId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RiskFactorAssessmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("StudentId")
                        .HasColumnType("text");

                    b.Property<decimal>("StudentMark")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("PatientExaminationResultId")
                        .IsUnique();

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.HasIndex("RiskFactorAssessmentId")
                        .IsUnique();

                    b.HasIndex("StudentId");

                    b.ToTable("PracticePatientExaminationCard", "credit");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticePatientExaminationResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("APIId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BeweId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BleedingId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DMFT_DMFSId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("APIId")
                        .IsUnique();

                    b.HasIndex("BeweId")
                        .IsUnique();

                    b.HasIndex("BleedingId")
                        .IsUnique();

                    b.HasIndex("DMFT_DMFSId")
                        .IsUnique();

                    b.ToTable("PracticePatientExaminationResult", "credit");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeRiskFactorAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("PracticeRiskFactorAssessment", "credit");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.API", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("APIResult")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Mandible")
                        .HasColumnType("integer");

                    b.Property<int>("Maxilla")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("API", "oralHealthExamination");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.Bewe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BeweResult")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("Bewe", "oralHealthExamination");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.Bleeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BleedingResult")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Mandible")
                        .HasColumnType("integer");

                    b.Property<int>("Maxilla")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Bleeding", "oralHealthExamination");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.DMFT_DMFS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("DMFSResult")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DMFTResult")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DMFT_DMFS", "oralHealthExamination");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("ArchiveComment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DoctorId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("EthnicGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtherData")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtherData2")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtherData3")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtherGroup")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("ResearchGroupId")
                        .HasColumnType("uuid");

                    b.Property<int>("YearsInSchool")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ResearchGroupId");

                    b.ToTable("Patient", "oralHealthExamination");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.PatientExaminationCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOfExamination")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DoctorComment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DoctorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsRegularMode")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PatientExaminationResultId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RiskFactorAssesmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("StudentId")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalScore")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientExaminationResultId")
                        .IsUnique();

                    b.HasIndex("PatientId");

                    b.HasIndex("RiskFactorAssesmentId")
                        .IsUnique();

                    b.HasIndex("StudentId");

                    b.ToTable("PatientExaminationCard", "oralHealthExamination");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.PatientExaminationResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("APIId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BeweId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BleedingId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DMFT_DMFSId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("APIId")
                        .IsUnique();

                    b.HasIndex("BeweId")
                        .IsUnique();

                    b.HasIndex("BleedingId")
                        .IsUnique();

                    b.HasIndex("DMFT_DMFSId")
                        .IsUnique();

                    b.ToTable("PatientExaminationResult", "oralHealthExamination");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.ResearchGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DoctorId")
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("ResearchGroup", "oralHealthExamination");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.RiskFactorAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("RiskFactorAssessment", "oralHealthExamination");
                });

            modelBuilder.Entity("App.Domain.Models.Users.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApplicationRole", "user");
                });

            modelBuilder.Entity("App.Domain.Models.Users.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeleteUserComment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(225)
                        .HasColumnType("character varying(225)");

                    b.Property<string>("GuestUserComment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsAccountActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasMaxLength(225)
                        .HasColumnType("character varying(225)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser", "user");
                });

            modelBuilder.Entity("App.Domain.Models.Users.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("ApplicationUserRole", "user");
                });

            modelBuilder.Entity("App.Domain.Models.Users.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("TeacherId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Group", "user");
                });

            modelBuilder.Entity("App.Domain.Models.Users.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", "user");
                });

            modelBuilder.Entity("App.Domain.Models.Users.StudentGroup", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<string>("StudentId")
                        .HasColumnType("text");

                    b.HasKey("GroupId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentGroup", "user");
                });

            modelBuilder.Entity("App.Domain.Models.Users.UserRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdminComment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCompleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("RequestStatus")
                        .HasMaxLength(20)
                        .HasColumnType("integer");

                    b.Property<string>("RequestTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("UserRequests", "user");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.Exam", b =>
                {
                    b.HasOne("App.Domain.Models.Users.Group", "Group")
                        .WithMany("Exams")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeAPI", b =>
                {
                    b.OwnsOne("App.Domain.Models.Common.APIBleeding.APIBleedingAssessmentModel", "AssessmentModel", b1 =>
                        {
                            b1.Property<Guid>("PracticeAPIId")
                                .HasColumnType("uuid");

                            b1.HasKey("PracticeAPIId");

                            b1.ToTable("PracticeAPI", "credit");

                            b1.ToJson("AssessmentModel");

                            b1.WithOwner()
                                .HasForeignKey("PracticeAPIId");

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant1", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelPracticeAPIId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelPracticeAPIId");

                                    b2.ToTable("PracticeAPI", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelPracticeAPIId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant2", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelPracticeAPIId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelPracticeAPIId");

                                    b2.ToTable("PracticeAPI", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelPracticeAPIId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant3", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelPracticeAPIId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelPracticeAPIId");

                                    b2.ToTable("PracticeAPI", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelPracticeAPIId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant4", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelPracticeAPIId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelPracticeAPIId");

                                    b2.ToTable("PracticeAPI", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelPracticeAPIId");
                                });

                            b1.Navigation("Quadrant1");

                            b1.Navigation("Quadrant2");

                            b1.Navigation("Quadrant3");

                            b1.Navigation("Quadrant4");
                        });

                    b.Navigation("AssessmentModel");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeBewe", b =>
                {
                    b.OwnsOne("App.Domain.Models.Common.Bewe.BeweAssessmentModel", "AssessmentModel", b1 =>
                        {
                            b1.Property<Guid>("PracticeBeweId")
                                .HasColumnType("uuid");

                            b1.HasKey("PracticeBeweId");

                            b1.ToTable("PracticeBewe", "credit");

                            b1.ToJson("AssessmentModel");

                            b1.WithOwner()
                                .HasForeignKey("PracticeBeweId");

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant1", "Sectant1", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelPracticeBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelPracticeBeweId");

                                    b2.ToTable("PracticeBewe", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelPracticeBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_14", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant1BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant1BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant1BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_15", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant1BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant1BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant1BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_16", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant1BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant1BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant1BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_17", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant1BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant1BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant1BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.Navigation("Tooth_14");

                                    b2.Navigation("Tooth_15");

                                    b2.Navigation("Tooth_16");

                                    b2.Navigation("Tooth_17");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant2", "Sectant2", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelPracticeBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelPracticeBeweId");

                                    b2.ToTable("PracticeBewe", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelPracticeBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_11", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_12", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_13", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_21", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_22", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_23", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.Navigation("Tooth_11");

                                    b2.Navigation("Tooth_12");

                                    b2.Navigation("Tooth_13");

                                    b2.Navigation("Tooth_21");

                                    b2.Navigation("Tooth_22");

                                    b2.Navigation("Tooth_23");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant3", "Sectant3", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelPracticeBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelPracticeBeweId");

                                    b2.ToTable("PracticeBewe", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelPracticeBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_24", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant3BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant3BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant3BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_25", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant3BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant3BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant3BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_26", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant3BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant3BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant3BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_27", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant3BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant3BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant3BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.Navigation("Tooth_24");

                                    b2.Navigation("Tooth_25");

                                    b2.Navigation("Tooth_26");

                                    b2.Navigation("Tooth_27");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant4", "Sectant4", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelPracticeBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelPracticeBeweId");

                                    b2.ToTable("PracticeBewe", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelPracticeBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_34", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant4BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant4BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant4BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_35", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant4BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant4BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant4BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_36", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant4BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant4BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant4BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_37", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant4BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant4BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant4BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.Navigation("Tooth_34");

                                    b2.Navigation("Tooth_35");

                                    b2.Navigation("Tooth_36");

                                    b2.Navigation("Tooth_37");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant5", "Sectant5", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelPracticeBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelPracticeBeweId");

                                    b2.ToTable("PracticeBewe", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelPracticeBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_31", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_32", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_33", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_41", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_42", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_43", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.Navigation("Tooth_31");

                                    b2.Navigation("Tooth_32");

                                    b2.Navigation("Tooth_33");

                                    b2.Navigation("Tooth_41");

                                    b2.Navigation("Tooth_42");

                                    b2.Navigation("Tooth_43");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant6", "Sectant6", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelPracticeBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelPracticeBeweId");

                                    b2.ToTable("PracticeBewe", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelPracticeBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_44", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant6BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant6BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant6BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_45", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant6BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant6BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant6BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_46", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant6BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant6BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant6BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_47", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant6BeweAssessmentModelPracticeBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant6BeweAssessmentModelPracticeBeweId");

                                            b3.ToTable("PracticeBewe", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant6BeweAssessmentModelPracticeBeweId");
                                        });

                                    b2.Navigation("Tooth_44");

                                    b2.Navigation("Tooth_45");

                                    b2.Navigation("Tooth_46");

                                    b2.Navigation("Tooth_47");
                                });

                            b1.Navigation("Sectant1");

                            b1.Navigation("Sectant2");

                            b1.Navigation("Sectant3");

                            b1.Navigation("Sectant4");

                            b1.Navigation("Sectant5");

                            b1.Navigation("Sectant6");
                        });

                    b.Navigation("AssessmentModel");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeBleeding", b =>
                {
                    b.OwnsOne("App.Domain.Models.Common.APIBleeding.APIBleedingAssessmentModel", "AssessmentModel", b1 =>
                        {
                            b1.Property<Guid>("PracticeBleedingId")
                                .HasColumnType("uuid");

                            b1.HasKey("PracticeBleedingId");

                            b1.ToTable("PracticeBleeding", "credit");

                            b1.ToJson("AssessmentModel");

                            b1.WithOwner()
                                .HasForeignKey("PracticeBleedingId");

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant1", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelPracticeBleedingId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelPracticeBleedingId");

                                    b2.ToTable("PracticeBleeding", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelPracticeBleedingId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant2", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelPracticeBleedingId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelPracticeBleedingId");

                                    b2.ToTable("PracticeBleeding", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelPracticeBleedingId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant3", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelPracticeBleedingId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelPracticeBleedingId");

                                    b2.ToTable("PracticeBleeding", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelPracticeBleedingId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant4", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelPracticeBleedingId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelPracticeBleedingId");

                                    b2.ToTable("PracticeBleeding", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelPracticeBleedingId");
                                });

                            b1.Navigation("Quadrant1");

                            b1.Navigation("Quadrant2");

                            b1.Navigation("Quadrant3");

                            b1.Navigation("Quadrant4");
                        });

                    b.Navigation("AssessmentModel");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeDMFT_DMFS", b =>
                {
                    b.OwnsOne("App.Domain.Models.Common.DMFT_DMFS.DMFT_DMFSAssessmentModel", "AssessmentModel", b1 =>
                        {
                            b1.Property<Guid>("PracticeDMFT_DMFSId")
                                .HasColumnType("uuid");

                            b1.HasKey("PracticeDMFT_DMFSId");

                            b1.ToTable("PracticeDMFT_DMFS", "credit");

                            b1.ToJson("AssessmentModel");

                            b1.WithOwner()
                                .HasForeignKey("PracticeDMFT_DMFSId");

                            b1.OwnsOne("App.Domain.Models.Common.DMFT_DMFS.LowerMouth", "LowerMouth", b2 =>
                                {
                                    b2.Property<Guid>("DMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Tooth_71")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_72")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_73")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_74")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_75")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_81")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_82")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_83")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_84")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_85")
                                        .HasColumnType("text");

                                    b2.HasKey("DMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                    b2.ToTable("PracticeDMFT_DMFS", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("DMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_31", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_32", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_33", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_34", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_35", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_36", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_37", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_38", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_41", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_42", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_43", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_44", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_45", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_46", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_47", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_48", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.Navigation("Tooth_31");

                                    b2.Navigation("Tooth_32");

                                    b2.Navigation("Tooth_33");

                                    b2.Navigation("Tooth_34");

                                    b2.Navigation("Tooth_35");

                                    b2.Navigation("Tooth_36");

                                    b2.Navigation("Tooth_37");

                                    b2.Navigation("Tooth_38");

                                    b2.Navigation("Tooth_41");

                                    b2.Navigation("Tooth_42");

                                    b2.Navigation("Tooth_43");

                                    b2.Navigation("Tooth_44");

                                    b2.Navigation("Tooth_45");

                                    b2.Navigation("Tooth_46");

                                    b2.Navigation("Tooth_47");

                                    b2.Navigation("Tooth_48");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.DMFT_DMFS.UpperMouth", "UpperMouth", b2 =>
                                {
                                    b2.Property<Guid>("DMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Tooth_51")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_52")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_53")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_54")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_55")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_61")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_62")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_63")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_64")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_65")
                                        .HasColumnType("text");

                                    b2.HasKey("DMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                    b2.ToTable("PracticeDMFT_DMFS", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("DMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_11", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_12", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_13", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_14", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_15", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_16", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_17", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_18", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_21", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_22", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_23", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_24", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_25", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_26", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_27", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_28", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");

                                            b3.ToTable("PracticeDMFT_DMFS", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelPracticeDMFT_DMFSId");
                                        });

                                    b2.Navigation("Tooth_11");

                                    b2.Navigation("Tooth_12");

                                    b2.Navigation("Tooth_13");

                                    b2.Navigation("Tooth_14");

                                    b2.Navigation("Tooth_15");

                                    b2.Navigation("Tooth_16");

                                    b2.Navigation("Tooth_17");

                                    b2.Navigation("Tooth_18");

                                    b2.Navigation("Tooth_21");

                                    b2.Navigation("Tooth_22");

                                    b2.Navigation("Tooth_23");

                                    b2.Navigation("Tooth_24");

                                    b2.Navigation("Tooth_25");

                                    b2.Navigation("Tooth_26");

                                    b2.Navigation("Tooth_27");

                                    b2.Navigation("Tooth_28");
                                });

                            b1.Navigation("LowerMouth");

                            b1.Navigation("UpperMouth");
                        });

                    b.Navigation("AssessmentModel");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticePatientExaminationCard", b =>
                {
                    b.HasOne("App.Domain.Models.CreditSchema.Exam", "Exam")
                        .WithMany("PracticePatientExaminationCards")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.CreditSchema.PracticePatientExaminationResult", "PracticePatientExaminationResult")
                        .WithOne("PracticePatientExaminationCard")
                        .HasForeignKey("App.Domain.Models.CreditSchema.PracticePatientExaminationCard", "PatientExaminationResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.CreditSchema.PracticePatient", "PracticePatient")
                        .WithOne("PracticePatientExaminationCard")
                        .HasForeignKey("App.Domain.Models.CreditSchema.PracticePatientExaminationCard", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.CreditSchema.PracticeRiskFactorAssessment", "PracticeRiskFactorAssessment")
                        .WithOne("PracticePatientExaminationCard")
                        .HasForeignKey("App.Domain.Models.CreditSchema.PracticePatientExaminationCard", "RiskFactorAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.Users.ApplicationUser", "Student")
                        .WithMany("PracticePatientExaminationCards")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Exam");

                    b.Navigation("PracticePatient");

                    b.Navigation("PracticePatientExaminationResult");

                    b.Navigation("PracticeRiskFactorAssessment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticePatientExaminationResult", b =>
                {
                    b.HasOne("App.Domain.Models.CreditSchema.PracticeAPI", "API")
                        .WithOne("PatientExaminationResult")
                        .HasForeignKey("App.Domain.Models.CreditSchema.PracticePatientExaminationResult", "APIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.CreditSchema.PracticeBewe", "Bewe")
                        .WithOne("PatientExaminationResult")
                        .HasForeignKey("App.Domain.Models.CreditSchema.PracticePatientExaminationResult", "BeweId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.CreditSchema.PracticeBleeding", "Bleeding")
                        .WithOne("PatientExaminationResult")
                        .HasForeignKey("App.Domain.Models.CreditSchema.PracticePatientExaminationResult", "BleedingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.CreditSchema.PracticeDMFT_DMFS", "DMFT_DMFS")
                        .WithOne("PatientExaminationResult")
                        .HasForeignKey("App.Domain.Models.CreditSchema.PracticePatientExaminationResult", "DMFT_DMFSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("API");

                    b.Navigation("Bewe");

                    b.Navigation("Bleeding");

                    b.Navigation("DMFT_DMFS");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeRiskFactorAssessment", b =>
                {
                    b.OwnsOne("App.Domain.Models.Common.RiskFactorAssessment.RiskFactorAssessmentModel", "RiskFactorAssessmentModel", b1 =>
                        {
                            b1.Property<Guid>("PracticeRiskFactorAssessmentId")
                                .HasColumnType("uuid");

                            b1.HasKey("PracticeRiskFactorAssessmentId");

                            b1.ToTable("PracticeRiskFactorAssessment", "credit");

                            b1.ToJson("RiskFactorAssessmentModel");

                            b1.WithOwner()
                                .HasForeignKey("PracticeRiskFactorAssessmentId");

                            b1.OwnsMany("App.Domain.Models.Common.RiskFactorAssessment.RiskFactorAssessmentQuestionModel", "Questions", b2 =>
                                {
                                    b2.Property<Guid>("RiskFactorAssessmentModelPracticeRiskFactorAssessmentId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("QuestionText")
                                        .HasColumnType("text");

                                    b2.HasKey("RiskFactorAssessmentModelPracticeRiskFactorAssessmentId", "Id");

                                    b2.ToTable("PracticeRiskFactorAssessment", "credit");

                                    b2.WithOwner()
                                        .HasForeignKey("RiskFactorAssessmentModelPracticeRiskFactorAssessmentId");

                                    b2.OwnsOne("App.Domain.Models.Common.RiskFactorAssessment.RiskFactorAssessmentAnswerModel", "Answer", b3 =>
                                        {
                                            b3.Property<Guid>("RiskFactorAssessmentQuestionModelRiskFactorAssessmentModelPracticeRiskFactorAssessmentId")
                                                .HasColumnType("uuid")
                                                .HasColumnName("RiskFactorAssessmentQuestionModelRiskFactorAssessmentModelPrac~");

                                            b3.Property<int>("RiskFactorAssessmentQuestionModelId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("HighRisk")
                                                .HasColumnType("text");

                                            b3.Property<string>("LowRisk")
                                                .HasColumnType("text");

                                            b3.Property<string>("ModerateRisk")
                                                .HasColumnType("text");

                                            b3.HasKey("RiskFactorAssessmentQuestionModelRiskFactorAssessmentModelPracticeRiskFactorAssessmentId", "RiskFactorAssessmentQuestionModelId");

                                            b3.ToTable("PracticeRiskFactorAssessment", "credit");

                                            b3.WithOwner()
                                                .HasForeignKey("RiskFactorAssessmentQuestionModelRiskFactorAssessmentModelPracticeRiskFactorAssessmentId", "RiskFactorAssessmentQuestionModelId");
                                        });

                                    b2.Navigation("Answer");
                                });

                            b1.Navigation("Questions");
                        });

                    b.Navigation("RiskFactorAssessmentModel");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.API", b =>
                {
                    b.OwnsOne("App.Domain.Models.Common.APIBleeding.APIBleedingAssessmentModel", "AssessmentModel", b1 =>
                        {
                            b1.Property<Guid>("APIId")
                                .HasColumnType("uuid");

                            b1.HasKey("APIId");

                            b1.ToTable("API", "oralHealthExamination");

                            b1.ToJson("AssessmentModel");

                            b1.WithOwner()
                                .HasForeignKey("APIId");

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant1", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelAPIId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelAPIId");

                                    b2.ToTable("API", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelAPIId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant2", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelAPIId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelAPIId");

                                    b2.ToTable("API", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelAPIId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant3", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelAPIId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelAPIId");

                                    b2.ToTable("API", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelAPIId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant4", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelAPIId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelAPIId");

                                    b2.ToTable("API", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelAPIId");
                                });

                            b1.Navigation("Quadrant1");

                            b1.Navigation("Quadrant2");

                            b1.Navigation("Quadrant3");

                            b1.Navigation("Quadrant4");
                        });

                    b.Navigation("AssessmentModel");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.Bewe", b =>
                {
                    b.OwnsOne("App.Domain.Models.Common.Bewe.BeweAssessmentModel", "AssessmentModel", b1 =>
                        {
                            b1.Property<Guid>("BeweId")
                                .HasColumnType("uuid");

                            b1.HasKey("BeweId");

                            b1.ToTable("Bewe", "oralHealthExamination");

                            b1.ToJson("AssessmentModel");

                            b1.WithOwner()
                                .HasForeignKey("BeweId");

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant1", "Sectant1", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelBeweId");

                                    b2.ToTable("Bewe", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_14", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant1BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant1BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant1BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_15", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant1BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant1BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant1BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_16", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant1BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant1BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant1BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_17", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant1BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant1BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant1BeweAssessmentModelBeweId");
                                        });

                                    b2.Navigation("Tooth_14");

                                    b2.Navigation("Tooth_15");

                                    b2.Navigation("Tooth_16");

                                    b2.Navigation("Tooth_17");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant2", "Sectant2", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelBeweId");

                                    b2.ToTable("Bewe", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_11", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_12", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_13", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_21", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_22", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_23", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant2BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant2BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant2BeweAssessmentModelBeweId");
                                        });

                                    b2.Navigation("Tooth_11");

                                    b2.Navigation("Tooth_12");

                                    b2.Navigation("Tooth_13");

                                    b2.Navigation("Tooth_21");

                                    b2.Navigation("Tooth_22");

                                    b2.Navigation("Tooth_23");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant3", "Sectant3", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelBeweId");

                                    b2.ToTable("Bewe", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_24", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant3BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant3BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant3BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_25", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant3BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant3BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant3BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_26", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant3BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant3BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant3BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_27", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant3BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant3BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant3BeweAssessmentModelBeweId");
                                        });

                                    b2.Navigation("Tooth_24");

                                    b2.Navigation("Tooth_25");

                                    b2.Navigation("Tooth_26");

                                    b2.Navigation("Tooth_27");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant4", "Sectant4", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelBeweId");

                                    b2.ToTable("Bewe", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_34", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant4BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant4BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant4BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_35", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant4BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant4BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant4BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_36", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant4BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant4BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant4BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_37", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant4BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant4BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant4BeweAssessmentModelBeweId");
                                        });

                                    b2.Navigation("Tooth_34");

                                    b2.Navigation("Tooth_35");

                                    b2.Navigation("Tooth_36");

                                    b2.Navigation("Tooth_37");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant5", "Sectant5", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelBeweId");

                                    b2.ToTable("Bewe", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_31", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_32", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_33", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_41", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_42", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FourSurfaceTooth", "Tooth_43", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant5BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant5BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant5BeweAssessmentModelBeweId");
                                        });

                                    b2.Navigation("Tooth_31");

                                    b2.Navigation("Tooth_32");

                                    b2.Navigation("Tooth_33");

                                    b2.Navigation("Tooth_41");

                                    b2.Navigation("Tooth_42");

                                    b2.Navigation("Tooth_43");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.Bewe.Sectant6", "Sectant6", b2 =>
                                {
                                    b2.Property<Guid>("BeweAssessmentModelBeweId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("BeweAssessmentModelBeweId");

                                    b2.ToTable("Bewe", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("BeweAssessmentModelBeweId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_44", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant6BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant6BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant6BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_45", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant6BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant6BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant6BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_46", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant6BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant6BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant6BeweAssessmentModelBeweId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothBEWE", "Tooth_47", b3 =>
                                        {
                                            b3.Property<Guid>("Sectant6BeweAssessmentModelBeweId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.HasKey("Sectant6BeweAssessmentModelBeweId");

                                            b3.ToTable("Bewe", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("Sectant6BeweAssessmentModelBeweId");
                                        });

                                    b2.Navigation("Tooth_44");

                                    b2.Navigation("Tooth_45");

                                    b2.Navigation("Tooth_46");

                                    b2.Navigation("Tooth_47");
                                });

                            b1.Navigation("Sectant1");

                            b1.Navigation("Sectant2");

                            b1.Navigation("Sectant3");

                            b1.Navigation("Sectant4");

                            b1.Navigation("Sectant5");

                            b1.Navigation("Sectant6");
                        });

                    b.Navigation("AssessmentModel");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.Bleeding", b =>
                {
                    b.OwnsOne("App.Domain.Models.Common.APIBleeding.APIBleedingAssessmentModel", "AssessmentModel", b1 =>
                        {
                            b1.Property<Guid>("BleedingId")
                                .HasColumnType("uuid");

                            b1.HasKey("BleedingId");

                            b1.ToTable("Bleeding", "oralHealthExamination");

                            b1.ToJson("AssessmentModel");

                            b1.WithOwner()
                                .HasForeignKey("BleedingId");

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant1", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelBleedingId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelBleedingId");

                                    b2.ToTable("Bleeding", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelBleedingId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant2", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelBleedingId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelBleedingId");

                                    b2.ToTable("Bleeding", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelBleedingId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant3", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelBleedingId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelBleedingId");

                                    b2.ToTable("Bleeding", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelBleedingId");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.APIBleeding.Quadrant", "Quadrant4", b2 =>
                                {
                                    b2.Property<Guid>("APIBleedingAssessmentModelBleedingId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value1")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value2")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value3")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value4")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value5")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value6")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value7")
                                        .HasColumnType("text");

                                    b2.HasKey("APIBleedingAssessmentModelBleedingId");

                                    b2.ToTable("Bleeding", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("APIBleedingAssessmentModelBleedingId");
                                });

                            b1.Navigation("Quadrant1");

                            b1.Navigation("Quadrant2");

                            b1.Navigation("Quadrant3");

                            b1.Navigation("Quadrant4");
                        });

                    b.Navigation("AssessmentModel");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.DMFT_DMFS", b =>
                {
                    b.OwnsOne("App.Domain.Models.Common.DMFT_DMFS.DMFT_DMFSAssessmentModel", "AssessmentModel", b1 =>
                        {
                            b1.Property<Guid>("DMFT_DMFSId")
                                .HasColumnType("uuid");

                            b1.HasKey("DMFT_DMFSId");

                            b1.ToTable("DMFT_DMFS", "oralHealthExamination");

                            b1.ToJson("AssessmentModel");

                            b1.WithOwner()
                                .HasForeignKey("DMFT_DMFSId");

                            b1.OwnsOne("App.Domain.Models.Common.DMFT_DMFS.LowerMouth", "LowerMouth", b2 =>
                                {
                                    b2.Property<Guid>("DMFT_DMFSAssessmentModelDMFT_DMFSId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Tooth_71")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_72")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_73")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_74")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_75")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_81")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_82")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_83")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_84")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_85")
                                        .HasColumnType("text");

                                    b2.HasKey("DMFT_DMFSAssessmentModelDMFT_DMFSId");

                                    b2.ToTable("DMFT_DMFS", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("DMFT_DMFSAssessmentModelDMFT_DMFSId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_31", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_32", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_33", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_34", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_35", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_36", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_37", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_38", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_41", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_42", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_43", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_44", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_45", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_46", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_47", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_48", b3 =>
                                        {
                                            b3.Property<Guid>("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("LowerMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.Navigation("Tooth_31");

                                    b2.Navigation("Tooth_32");

                                    b2.Navigation("Tooth_33");

                                    b2.Navigation("Tooth_34");

                                    b2.Navigation("Tooth_35");

                                    b2.Navigation("Tooth_36");

                                    b2.Navigation("Tooth_37");

                                    b2.Navigation("Tooth_38");

                                    b2.Navigation("Tooth_41");

                                    b2.Navigation("Tooth_42");

                                    b2.Navigation("Tooth_43");

                                    b2.Navigation("Tooth_44");

                                    b2.Navigation("Tooth_45");

                                    b2.Navigation("Tooth_46");

                                    b2.Navigation("Tooth_47");

                                    b2.Navigation("Tooth_48");
                                });

                            b1.OwnsOne("App.Domain.Models.Common.DMFT_DMFS.UpperMouth", "UpperMouth", b2 =>
                                {
                                    b2.Property<Guid>("DMFT_DMFSAssessmentModelDMFT_DMFSId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Tooth_51")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_52")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_53")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_54")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_55")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_61")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_62")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_63")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_64")
                                        .HasColumnType("text");

                                    b2.Property<string>("Tooth_65")
                                        .HasColumnType("text");

                                    b2.HasKey("DMFT_DMFSAssessmentModelDMFT_DMFSId");

                                    b2.ToTable("DMFT_DMFS", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("DMFT_DMFSAssessmentModelDMFT_DMFSId");

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_11", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_12", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_13", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_14", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_15", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_16", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_17", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_18", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_21", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_22", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.FiveSurfaceToothDMFT_DMFS", "Tooth_23", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_24", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_25", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_26", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_27", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.OwnsOne("App.Domain.Models.Common.Tooth.SixSurfaceTooth", "Tooth_28", b3 =>
                                        {
                                            b3.Property<Guid>("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("B")
                                                .HasColumnType("text");

                                            b3.Property<string>("D")
                                                .HasColumnType("text");

                                            b3.Property<string>("L")
                                                .HasColumnType("text");

                                            b3.Property<string>("M")
                                                .HasColumnType("text");

                                            b3.Property<string>("O")
                                                .HasColumnType("text");

                                            b3.Property<string>("R")
                                                .HasColumnType("text");

                                            b3.HasKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");

                                            b3.ToTable("DMFT_DMFS", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("UpperMouthDMFT_DMFSAssessmentModelDMFT_DMFSId");
                                        });

                                    b2.Navigation("Tooth_11");

                                    b2.Navigation("Tooth_12");

                                    b2.Navigation("Tooth_13");

                                    b2.Navigation("Tooth_14");

                                    b2.Navigation("Tooth_15");

                                    b2.Navigation("Tooth_16");

                                    b2.Navigation("Tooth_17");

                                    b2.Navigation("Tooth_18");

                                    b2.Navigation("Tooth_21");

                                    b2.Navigation("Tooth_22");

                                    b2.Navigation("Tooth_23");

                                    b2.Navigation("Tooth_24");

                                    b2.Navigation("Tooth_25");

                                    b2.Navigation("Tooth_26");

                                    b2.Navigation("Tooth_27");

                                    b2.Navigation("Tooth_28");
                                });

                            b1.Navigation("LowerMouth");

                            b1.Navigation("UpperMouth");
                        });

                    b.Navigation("AssessmentModel");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.Patient", b =>
                {
                    b.HasOne("App.Domain.Models.Users.ApplicationUser", "Doctor")
                        .WithMany("Patients")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("App.Domain.Models.OralHealthExamination.ResearchGroup", "ResearchGroup")
                        .WithMany("Patients")
                        .HasForeignKey("ResearchGroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Doctor");

                    b.Navigation("ResearchGroup");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.PatientExaminationCard", b =>
                {
                    b.HasOne("App.Domain.Models.Users.ApplicationUser", "Doctor")
                        .WithMany("PatientExaminationCardDoctorNavigation")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("App.Domain.Models.OralHealthExamination.PatientExaminationResult", "PatientExaminationResult")
                        .WithOne("PatientExaminationCard")
                        .HasForeignKey("App.Domain.Models.OralHealthExamination.PatientExaminationCard", "PatientExaminationResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.OralHealthExamination.Patient", "Patient")
                        .WithMany("PatientExaminationCards")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.OralHealthExamination.RiskFactorAssessment", "RiskFactorAssessment")
                        .WithOne("PatientExaminationCard")
                        .HasForeignKey("App.Domain.Models.OralHealthExamination.PatientExaminationCard", "RiskFactorAssesmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.Users.ApplicationUser", "Student")
                        .WithMany("PatientExaminationCardStudentNavigation")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Doctor");

                    b.Navigation("Patient");

                    b.Navigation("PatientExaminationResult");

                    b.Navigation("RiskFactorAssessment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.PatientExaminationResult", b =>
                {
                    b.HasOne("App.Domain.Models.OralHealthExamination.API", "API")
                        .WithOne("PatientExaminationResult")
                        .HasForeignKey("App.Domain.Models.OralHealthExamination.PatientExaminationResult", "APIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.OralHealthExamination.Bewe", "Bewe")
                        .WithOne("PatientExaminationResult")
                        .HasForeignKey("App.Domain.Models.OralHealthExamination.PatientExaminationResult", "BeweId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.OralHealthExamination.Bleeding", "Bleeding")
                        .WithOne("PatientExaminationResult")
                        .HasForeignKey("App.Domain.Models.OralHealthExamination.PatientExaminationResult", "BleedingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.OralHealthExamination.DMFT_DMFS", "DMFT_DMFS")
                        .WithOne("PatientExaminationResult")
                        .HasForeignKey("App.Domain.Models.OralHealthExamination.PatientExaminationResult", "DMFT_DMFSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("API");

                    b.Navigation("Bewe");

                    b.Navigation("Bleeding");

                    b.Navigation("DMFT_DMFS");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.ResearchGroup", b =>
                {
                    b.HasOne("App.Domain.Models.Users.ApplicationUser", "Doctor")
                        .WithMany("PatientGroups")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.RiskFactorAssessment", b =>
                {
                    b.OwnsOne("App.Domain.Models.Common.RiskFactorAssessment.RiskFactorAssessmentModel", "RiskFactorAssessmentModel", b1 =>
                        {
                            b1.Property<Guid>("RiskFactorAssessmentId")
                                .HasColumnType("uuid");

                            b1.HasKey("RiskFactorAssessmentId");

                            b1.ToTable("RiskFactorAssessment", "oralHealthExamination");

                            b1.ToJson("RiskFactorAssessmentModel");

                            b1.WithOwner()
                                .HasForeignKey("RiskFactorAssessmentId");

                            b1.OwnsMany("App.Domain.Models.Common.RiskFactorAssessment.RiskFactorAssessmentQuestionModel", "Questions", b2 =>
                                {
                                    b2.Property<Guid>("RiskFactorAssessmentModelRiskFactorAssessmentId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("QuestionText")
                                        .HasColumnType("text");

                                    b2.HasKey("RiskFactorAssessmentModelRiskFactorAssessmentId", "Id");

                                    b2.ToTable("RiskFactorAssessment", "oralHealthExamination");

                                    b2.WithOwner()
                                        .HasForeignKey("RiskFactorAssessmentModelRiskFactorAssessmentId");

                                    b2.OwnsOne("App.Domain.Models.Common.RiskFactorAssessment.RiskFactorAssessmentAnswerModel", "Answer", b3 =>
                                        {
                                            b3.Property<Guid>("RiskFactorAssessmentQuestionModelRiskFactorAssessmentModelRiskFactorAssessmentId")
                                                .HasColumnType("uuid")
                                                .HasColumnName("RiskFactorAssessmentQuestionModelRiskFactorAssessmentModelRisk~");

                                            b3.Property<int>("RiskFactorAssessmentQuestionModelId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("HighRisk")
                                                .HasColumnType("text");

                                            b3.Property<string>("LowRisk")
                                                .HasColumnType("text");

                                            b3.Property<string>("ModerateRisk")
                                                .HasColumnType("text");

                                            b3.HasKey("RiskFactorAssessmentQuestionModelRiskFactorAssessmentModelRiskFactorAssessmentId", "RiskFactorAssessmentQuestionModelId");

                                            b3.ToTable("RiskFactorAssessment", "oralHealthExamination");

                                            b3.WithOwner()
                                                .HasForeignKey("RiskFactorAssessmentQuestionModelRiskFactorAssessmentModelRiskFactorAssessmentId", "RiskFactorAssessmentQuestionModelId");
                                        });

                                    b2.Navigation("Answer");
                                });

                            b1.Navigation("Questions");
                        });

                    b.Navigation("RiskFactorAssessmentModel");
                });

            modelBuilder.Entity("App.Domain.Models.Users.ApplicationUserRole", b =>
                {
                    b.HasOne("App.Domain.Models.Users.ApplicationRole", "ApplicationRole")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.Users.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationRole");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("App.Domain.Models.Users.Group", b =>
                {
                    b.HasOne("App.Domain.Models.Users.ApplicationUser", "Teacher")
                        .WithMany("Groups")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("App.Domain.Models.Users.RefreshToken", b =>
                {
                    b.HasOne("App.Domain.Models.Users.ApplicationUser", "ApplicationUser")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("App.Domain.Models.Users.StudentGroup", b =>
                {
                    b.HasOne("App.Domain.Models.Users.Group", "Group")
                        .WithMany("StudentGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Models.Users.ApplicationUser", "Student")
                        .WithMany("StudentGroups")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("App.Domain.Models.Users.UserRequest", b =>
                {
                    b.HasOne("App.Domain.Models.Users.ApplicationUser", "ApplicationUser")
                        .WithMany("UserRequests")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.Exam", b =>
                {
                    b.Navigation("PracticePatientExaminationCards");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeAPI", b =>
                {
                    b.Navigation("PatientExaminationResult");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeBewe", b =>
                {
                    b.Navigation("PatientExaminationResult");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeBleeding", b =>
                {
                    b.Navigation("PatientExaminationResult");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeDMFT_DMFS", b =>
                {
                    b.Navigation("PatientExaminationResult");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticePatient", b =>
                {
                    b.Navigation("PracticePatientExaminationCard");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticePatientExaminationResult", b =>
                {
                    b.Navigation("PracticePatientExaminationCard");
                });

            modelBuilder.Entity("App.Domain.Models.CreditSchema.PracticeRiskFactorAssessment", b =>
                {
                    b.Navigation("PracticePatientExaminationCard");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.API", b =>
                {
                    b.Navigation("PatientExaminationResult");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.Bewe", b =>
                {
                    b.Navigation("PatientExaminationResult");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.Bleeding", b =>
                {
                    b.Navigation("PatientExaminationResult");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.DMFT_DMFS", b =>
                {
                    b.Navigation("PatientExaminationResult");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.Patient", b =>
                {
                    b.Navigation("PatientExaminationCards");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.PatientExaminationResult", b =>
                {
                    b.Navigation("PatientExaminationCard");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.ResearchGroup", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("App.Domain.Models.OralHealthExamination.RiskFactorAssessment", b =>
                {
                    b.Navigation("PatientExaminationCard");
                });

            modelBuilder.Entity("App.Domain.Models.Users.ApplicationRole", b =>
                {
                    b.Navigation("ApplicationUserRoles");
                });

            modelBuilder.Entity("App.Domain.Models.Users.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserRoles");

                    b.Navigation("Groups");

                    b.Navigation("PatientExaminationCardDoctorNavigation");

                    b.Navigation("PatientExaminationCardStudentNavigation");

                    b.Navigation("PatientGroups");

                    b.Navigation("Patients");

                    b.Navigation("PracticePatientExaminationCards");

                    b.Navigation("RefreshTokens");

                    b.Navigation("StudentGroups");

                    b.Navigation("UserRequests");
                });

            modelBuilder.Entity("App.Domain.Models.Users.Group", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("StudentGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
